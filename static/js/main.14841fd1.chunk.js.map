{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/Search/Search.js","components/Search/InputCity/InputCity.js","components/Search/SearchCity/SearchCity.js","components/ui/Toggle.js","utils.js","components/TableInfo/TableInfoDay/TableInfoDay.js","components/TableInfo/TableInfoWeek/TableRow/TableRow.js","components/TableInfo/TableInfoWeek/TableInfoWeek.js","components/TableInfo/TableInfo.js","components/ErrorWindow/ErrorWindow.js","components/Weather/Weather.js","App.js","index.js"],"names":["Header","className","to","Home","style","height","Search","props","InputCity","Toggle","SearchCity","autoFocus","placeholder","value","onChange","onClick","leftField","type","checked","rightFied","convertToCelsium","Math","round","getDate","timestamp","min","date","Date","getMinutes","console","log","getHours","TableInfoDay","dayData","tempInCelsium","dt","weatherProfile","profile","bg","temp","info","sunset","display","pressure","humidity","sunrise","weekDays","yearMonths","TableRow","weekDate","weekTemp","weekPessure","weekhumidity","dayNum","getDay","monthNum","getMonth","dateNum","TableInfoWeek","weekData","view","map","e","i","average","TableInfo","data","useState","setChecked","list","city","name","slice","main","sys","weather","ErrorWindow","Weather","navigate","useNavigate","useParams","responseObj","checkedWeather","error","setData","useEffect","getTableInfo","fetch","then","response","ok","Error","json","res","catch","event","target","App","path","exact","element","handleChange","changeWeat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14841fd1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.css'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div >\r\n            <header className=\"App-header\">\r\n                <Link to=\"/\"><p>WeatherNow</p></Link>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './home.css'\r\n\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <div className=\"description\">\r\n                OpenWeatherMap — онлайн сервис, который предоставляет платный (есть функционально ограниченная бесплатная версия) API для доступа к данным о текущей погоде, прогнозам и историческим данным. В качестве источника данных используются официальные метеорологические службы, данные из метеостанций аэропортов, и данные с частных метеостанций. Информация обрабатываются OpenWeatherMap, после чего, на основе данных строится прогноз погоды и погодные карты, например карты облачности и осадков. Основной идеей сервиса OWM является использование частных погодных станций, которые помогают повысить точность исходной погодной информации и, как следствие, точность прогнозов погоды. Вдохновителями OpenWeatherMap были картографический сервис OpenStreetMap и Википедия, создающие свободную информацию и предоставляющие её бесплатно для всех. В настоящее время OWM является коммерческой организацией.\r\n            </div>\r\n            <Link to=\"/check-the-weather/\">\r\n                <div className=\"container-check\">\r\n                    <button>Сheck the weather</button>\r\n                </div>\r\n                <div style={{ height: \"30px\" }}></div>\r\n            </Link>\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\nimport './search.css'\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <div className=\"content\">\r\n            <h1>Enter the city to get the weather:</h1>\r\n            <div className=\"container-search\">\r\n                {props.InputCity}\r\n                <div className=\"container-toggle-searchCity\">\r\n                    <div className=\"container-toggle\">{props.Toggle}</div>\r\n                    {props.SearchCity}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from \"react\";\r\nimport './inputCity.css';\r\n\r\nfunction InputCity(props) {\r\n\r\n    return (\r\n        <div className=\"container-city\">\r\n            <input\r\n                autoFocus\r\n                placeholder=\"Input city\"\r\n                value={props.value}\r\n                onChange={props.onChange}>\r\n            </input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputCity\r\n","import React from 'react';\r\nimport './searchCity.css';\r\n\r\nfunction SearchCity(props) {\r\n\r\n    return (\r\n        <div className=\"container-citySearch\">\r\n            <button onClick={props.onClick}>Search</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCity","import React from 'react'\r\nimport './toggle.css'\r\n\r\nfunction Toggle(props) {\r\n    return (\r\n        <div className=\"switcher\">\r\n            <div className=\"container-unit green\"><div>{props.leftField}</div></div>\r\n            <label className=\"switch\">\r\n                <input type=\"checkbox\" checked={props.checked} onChange={props.onChange}></input>\r\n                <span className=\"slider round\"></span>\r\n            </label>\r\n            <div className=\"container-unit blue\"><div>{props.rightFied}</div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toggle","export const convertToCelsium = (value) => {\r\n    return Math.round(value - 273)\r\n}\r\n\r\nexport const getDate = (timestamp) => {\r\n    let date = new Date(timestamp * 1000);\r\n    let min;\r\n    if (date.getMinutes() < 10) {\r\n        min = '0' + date.getMinutes()\r\n    } else {\r\n        min = date.getMinutes()\r\n    } console.log(timestamp);\r\n    return date.getHours() + \":\" + min;\r\n}\r\n\r\n","import React from 'react'\r\nimport { getDate, convertToCelsium } from '../../../utils'\r\nimport './tableInfoDay.css'\r\n\r\nfunction TableInfoDay({ dayData, tempInCelsium, dt, weatherProfile }) {\r\n\r\n    const [profile, bg, temp, info] = (() => {\r\n        let profile, bg, temp, info\r\n\r\n        switch (weatherProfile) {\r\n            case 'Clouds': profile = 'cloud'\r\n                break\r\n            case 'Clear': profile = ''\r\n                break\r\n            case 'Snow': profile = 'snow'\r\n                break\r\n            case 'Rain': profile = 'rain'\r\n                break\r\n        }\r\n\r\n        if (dt > dayData.sunset) {\r\n            bg = 'bg-night'\r\n            temp = 'temp-night'\r\n            info = 'info-night'\r\n        } else {\r\n            bg = 'bg-day'\r\n            temp = 'temp-day'\r\n            info = 'info-day'\r\n        }\r\n\r\n        return [profile, bg, temp, info]\r\n    })()\r\n\r\n    return (\r\n        <div className={`container-table-info ${profile} ${bg}`}>\r\n            <div className=\"container-temp\">\r\n                <div style={{ display: \"flex\" }}>\r\n                    {dt < dayData.sunset ?\r\n                        <div className=\"bg-img-solar\"></div> :\r\n                        <div className=\"bg-img-moon\"></div>}\r\n                    <div className={`temp ${temp}`}>\r\n                        <div>{!tempInCelsium ? convertToCelsium(dayData.temp) + '℃' : Math.round(dayData.temp) + 'K'}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`container-info ${info}`}>\r\n                <div className=\"container-item\">\r\n                    <div className=\"img-info icon-pressure\"></div>\r\n                    <div className=\"info\">{dayData.pressure} hPa</div>\r\n                </div>\r\n                <div className=\"container-item\">\r\n                    <div className=\"img-info icon-humidity\"></div>\r\n                    <div className=\"info\">{dayData.humidity}%</div>\r\n                </div>\r\n                <div className=\"container-item\">\r\n                    <div className=\"img-info icon-sunrise\"></div>\r\n                    <div className=\"info\">{getDate(dayData.sunrise)}</div>\r\n                </div>\r\n                <div className=\"container-item\">\r\n                    <div className=\"img-info icon-sunset\"></div>\r\n                    <div className=\"info\">{getDate(dayData.sunset)}</div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TableInfoDay","import React from 'react'\r\n\r\nconst weekDays = ['Sunday ', 'Monday', 'Tuesday', 'Wednesday ', 'Thursday ', 'Friday ', 'Saturday ']\r\nconst yearMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\nfunction TableRow({ weekDate, weekTemp, weekPessure, weekhumidity }) {\r\n    console.log(weekDate);\r\n    let date = new Date(weekDate * 1000);\r\n    let dayNum = date.getDay()\r\n    let monthNum = date.getMonth()\r\n    let dateNum = date.getDate()\r\n\r\n    return (\r\n        <tr>\r\n            <td>{yearMonths[monthNum] + ', ' + dateNum}</td>\r\n            <td>{weekDays[dayNum]}</td>\r\n            <td>{weekTemp}</td>\r\n            <td>{Math.round(weekPessure)} hPa</td>\r\n            <td>{Math.round(weekhumidity)}%</td>\r\n        </tr>\r\n\r\n    )\r\n}\r\n\r\nexport default TableRow","import React from 'react'\r\nimport './tableInfoWeek.css'\r\nimport TableRow from './TableRow/TableRow'\r\nimport { convertToCelsium } from '../../../utils'\r\n\r\n\r\nfunction TableInfoWeek({ weekData, view }) {\r\n    return (\r\n        <div className=\"container-table-info\">\r\n            {!view ?\r\n                <table>\r\n                    <tr className=\"tableHead\">\r\n                        <th>Date</th>\r\n                        <th>Day</th>\r\n                        <th>Temperature</th>\r\n                        <th>Pressure</th>\r\n                        <th>Humidity</th>\r\n                    </tr>\r\n                    {weekData && weekData.map((e, i) => (\r\n                        <TableRow\r\n                            key={i + '123'}\r\n                            weekDate={weekData[i].dt}\r\n                            weekTemp={convertToCelsium(weekData[i].temp.average) + '℃'}\r\n                            weekPessure={weekData[i].pressure}\r\n                            weekhumidity={weekData[i].humidity}\r\n                        />\r\n                    ))}\r\n                </table> : <div>я пидорас</div>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TableInfoWeek","import React, { useState } from 'react'\r\nimport './tableInfo.css'\r\nimport Toggle from '../ui/Toggle'\r\nimport TableInfoDay from './TableInfoDay/TableInfoDay'\r\nimport TableInfoWeek from './TableInfoWeek/TableInfoWeek'\r\n\r\nfunction TableInfo({ data }) {\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    return (\r\n        <div className=\"container-table\">\r\n            <div className=\"cityName\">\r\n                <div className=\"city\">{data.list ? data.city.name : data.name}</div>\r\n                <div className=\"container-toggle-weat\">\r\n                    {data.list ?\r\n                        <Toggle\r\n                            checked={checked}\r\n                            onChange={() => setChecked(!checked)}\r\n                            rightFied=\"2\"\r\n                            leftField=\"1\"\r\n                        /> :\r\n                        <Toggle\r\n                            checked={checked}\r\n                            onChange={() => setChecked(!checked)}\r\n                            rightFied=\"K\"\r\n                            leftField=\"℃\"\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n            {data.list ?\r\n                <TableInfoWeek\r\n                    view={checked}\r\n                    weekData={data.list.slice(0, 7)}\r\n                /> :\r\n                <TableInfoDay\r\n                    tempInCelsium={checked}\r\n                    dayData={{ ...data.main, ...data.sys }}\r\n                    dt={data.dt}\r\n                    weatherProfile={data.weather[0].main}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TableInfo","import React from 'react'\r\nimport './errorWindow.css'\r\n\r\nfunction ErrorWindow() {\r\n\r\n    return (\r\n        <div className=\"error\">Invalid city!</div>\r\n    )\r\n}\r\n\r\nexport default ErrorWindow","import React, { useState, useEffect } from 'react'\r\nimport Search from '../Search/Search'\r\nimport InputCity from '../Search/InputCity/InputCity'\r\nimport SearchCity from '../Search/SearchCity/SearchCity'\r\nimport TableInfo from '../TableInfo/TableInfo'\r\nimport ErrorWindow from '../ErrorWindow/ErrorWindow'\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\n\r\n\r\nfunction Weather() {\r\n    let navigate = useNavigate();\r\n\r\n    const { name } = useParams();\r\n\r\n    const [data, setData] = useState({\r\n        value: '',\r\n        responseObj: null,\r\n        checkedWeather: false,\r\n        error: false\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        if (!name) {\r\n            return\r\n        }\r\n        getTableInfo(name)\r\n    }, [name])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setData({ ...data, value: event.target.value })\r\n    }\r\n\r\n\r\n    const changeWeat = () => {\r\n        setData({ ...data, checkedWeat: !data.checkedWeat })\r\n    }\r\n\r\n    const getTableInfo = (city) => {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=f6b0640ae7c87d4a0e1b67c607b45f56`)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json().then((res) => setData({ ...data, responseObj: res, error: false }))\r\n                    console.log(response)\r\n                    console.log(data.error)\r\n                } else {\r\n                    throw new Error('Something went wrong')\r\n                }\r\n            })\r\n            .catch(() => {\r\n                console.log('errrr')\r\n                setData({ ...data, error: true })\r\n            })\r\n\r\n        if (!name && data.value) {\r\n            navigate('/check-the-weather/' + data.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Search\r\n                InputCity={<InputCity value={data.value} onChange={handleChange} />}\r\n                SearchCity={<SearchCity onClick={() => getTableInfo(data.value)} />}\r\n            />\r\n            {data.error ?\r\n                <ErrorWindow /> :\r\n                data.responseObj &&\r\n                <TableInfo data={data.responseObj} />\r\n            }\r\n            <div style={{ height: \"30px\" }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Header from './components/Header/Header'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes,\r\n} from \"react-router-dom\";\r\nimport Home from './components/Home/Home'\r\nimport Weather from './components/Weather/Weather'\r\n// import Footer from './components/Footer/Footer';\r\n\r\n\r\n\r\nexport default function App(props) {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\" >\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Routes>\r\n            <Route path=\"/\" exact element={<Home />} />\r\n            <Route path=\"/check-the-weather\">\r\n              <Route\r\n                path=\":name\"\r\n                element={\r\n                  <Weather\r\n                    data={props.data}\r\n                    handleChange={props.handleChange}\r\n                    changeWeat={props.changeWeat}\r\n                    getTableInfo={props.getTableInfo}\r\n                  />}\r\n              />\r\n              <Route\r\n                path=\"\"\r\n                element={\r\n                  <Weather\r\n                    data={props.data}\r\n                    handleChange={props.handleChange}\r\n                    changeWeat={props.changeWeat}\r\n                    getTableInfo={props.getTableInfo}\r\n                  />}\r\n              />\r\n            </Route>\r\n          </Routes>\r\n        </div>\r\n        {/* <Footer /> */}\r\n      </div>\r\n    </Router >\r\n  )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}